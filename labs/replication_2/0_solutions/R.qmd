---
title: "Lab2-Solutions"
---

```{r}
library(tidyverse)

```


# RCT

## Focus on treatment group 2

```{r}
data_raw = "https://raw.githubusercontent.com/alexanderquispe/CausalAI-Course/main/data/penn_jae.csv"
data <- readr::read_csv(data_raw)

# filter
data_f <- data |> 
  filter(tg %in% c(2, 0)) |> 
  mutate(
    t2 = ifelse(tg == 2, 1, 0)
    , tg = t2) 
```

## Plot 2 histograms

```{r}

data_f |> 
  ggplot() +
  geom_histogram() +
  aes(x = inuidur1, fill = factor(tg)) +
  facet_wrap(~tg)

```




## Run all spec:

### CL

```{r}
fmla_cl <- inuidur1 ~ t2
lm(fmla_cl, data = data_f) |> broom::tidy()
```

### CRA

```{r}
fml_cra = log(inuidur1) ~ t2 + (female + black + othrace + factor(dep) + q2 + q3 + q4 + q5 + q6 + agelt35 + agegt54 + durable + lusd + husd)^2

lm(fml_cra, data = data_f) |> broom::tidy()

```


### IRA

```{r}
fml_ira = log(inuidur1) ~ t2 + t2*((female+black+othrace+factor(dep)+q2+q3+q4+q5+q6+agelt35+agegt54+durable+lusd+husd)^2)+(female+black+othrace+factor(dep)+q2+q3+q4+q5+q6+agelt35+agegt54+durable+lusd+husd)^2

ira_md <- lm(fml_ira, data=data_f) 
ira_md_ci <- ira_md |> confint() |> as_tibble() |> rename(ll = 1, uu = 2)
ira_md <- ira_md |> broom::tidy() |> bind_cols(ira_md_ci)
ira_md
# ira_md.summary()
```

### IRA - Lasso (hdm)

```{r}

demean<- function(x){ x - mean(x)}
t2 = data_f |> pull(t2)
t2 <- demean(t2)
X <- model.matrix(~(
  female + black + othrace + factor(dep)+q2+q3+q4+q5+q6+agelt35+agegt54+durable+lusd+husd
  )^2, data = data_f)[,-1]
X = apply(X, 2, demean)
dx = model.matrix(~t2*X)[, -1]
glimpse(dx)
inuidur1 = data_f |> pull(inuidur1) |> log()

rlass_ira = hdm::rlassoEffects(dx, inuidur1)
rlass_ira
```

### IRA - plot coef 

<!-- t2*female, t2_black, t2 agelt35, t2factor(dep)1 -->
<!-- Explanations -->

```{r}
# ira_md |> 
#   pull(term)

ref = c("t2:female", "t2:black", 't2:agelt35', "t2:factor(dep)1")


ira_md |> 
  filter(term %in% ref) |> 
  # rename()
  ggplot() +
  aes(term, estimate) +
  geom_point() +
  geom_errorbar(aes(ymin = ll, ymax = uu)) +
  theme_minimal()
```


# Good and Bad Controls



## Model 1

```{r}
library(modelsummary)
n=1000
z <- rnorm(n)
x <- 1 * z + rnorm(n)
y <- x + 0.8 * z + rnorm(n)

data <- tibble::tibble(z = z, x = x, y = y)

bad <- lm(y ~ x, data = data)
good <- lm(y ~ x + z, data = data)

models = list(
  'bad' = bad,
  'good' = good
)
modelsummary(models, output = 'markdown')
```


## Model 3


```{r}
U <- rnorm(n)
Z <- 1.1 * U + rnorm(n)
X <- 0.2 * U + rnorm(n)
Y <- X + 0.8 * U + rnorm(n)
# data <- tibble(z = Z, x = X, y = Y)

models = list(
  'Bad' = lm(y ~ x),
  'Good' = lm(y ~ x + z)
)
modelsummary(models, output = 'markdown')


```


## Model 4

```{r}
z <- rnorm(1000)
x <- 2*z + rnorm(1000)
m <- x + 8*z + rnorm(1000)
y <- m + rnorm(1000)

models = list(
  'No Control' = lm(y ~ x),
  'Using Control' = lm(y ~ x + z),
  'Treats Confonding' = lm(y ~ x + z + m)
)
modelsummary(models, output = 'markdown')
```

## Model 6

```{r}
U <- rnorm(1000)
Z <- 1*U + rnorm(1000)
X <- 2.3*U + rnorm(1000)
M <- X + Z + rnorm(1000)
Y <- M + rnorm(1000)

models = list(
  'No Control' = lm(Y ~ X),
  'Using Control' = lm(Y ~ X + Z),
  'Treats Confonding' = lm(Y ~ X + Z + M)
)
modelsummary(models, output = 'markdown')

```

## Model 7

```{r}
U1 <- rnorm(1000)
U2 <- rnorm(1000)
Z <- 0.7*U1 + 1.3*U2 + rnorm(1000)
X <- 1.2*U1 + rnorm(1000)
Y <- X + 7*U2 + rnorm(1000)

models = list(
  'No Control' = lm(Y ~ X),
  'Using Control' = lm(Y ~ X + Z)
)
modelsummary(models, output = 'markdown')
```